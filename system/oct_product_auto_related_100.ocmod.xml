<?xml version="1.0" encoding="utf-8"?>
<modification>
  <code>oct_product_auto_related_100</code>
  <name>Octemplates - Auto Related Products</name>
  <version>1.0.0</version>
  <author>Octemplates</author>
  <link>http://octemplates.net/</link>
  <file path="catalog/controller/product/product.php">
    <operation>
        <search><![CDATA[public function review() {]]></search>
        <add position="before"><![CDATA[
            public function getAutoRels() {
        		$this->load->model('catalog/product');
        		$this->load->model('tool/image');

        		$data = array();
                $data = array_merge($data, $this->load->language('product/product'));

        		$oct_data = $this->config->get('oct_techstore_data');

        		if ((isset($oct_data['oct_lazyload']) && $oct_data['oct_lazyload'] == 1) && (isset($oct_data['oct_lazyload_module']) && $oct_data['oct_lazyload_module'] == 1)) {
        			/* 3359 */
        			if ($oct_data['enable_minify'] == 'off') {
        				$this->document->addScript('catalog/view/theme/oct_techstore/js/lazyload/jquery.lazyload.min.js');
        			}

        			$data['oct_lazyload'] = $oct_data['oct_lazyload'];

        			if (isset($oct_data['oct_lazyload_image']) && $oct_data['oct_lazyload_image']) {
        				$data['oct_lazyload_image'] = 'image/'.$oct_data['oct_lazyload_image'];
        			} else {
        				$data['oct_lazyload_image'] = '/image/catalog/1lazy/oct_loader_product.gif';
        			}
        			/* 3359 */
        		}

                $data['oct_popup_view_data'] = $this->config->get('oct_popup_view_data');
                $data['button_popup_view'] = $this->language->get('button_popup_view');

        		$resultss = $this->model_catalog_product->getProductRelated($this->request->get['product_id']);

                $oct_product_auto_related_data = $this->config->get('oct_product_auto_related_data');

                if (isset($oct_product_auto_related_data) && $oct_product_auto_related_data['status'] != 0) {
                  // oct_product_auto_related start
                  $oct_product_auto_related_data = $this->config->get('oct_product_auto_related_data');

                  $this->load->model('extension/module/oct_product_auto_related');

                  $data_info = array(
                    'product_id'          => $this->request->get['product_id'],
                    'sort'                => 'p.product_id',
                    'filter_category_id'  => (isset($category_id)) ? $category_id : 0,
                    'filter_sub_category' => 1,
                    'order'               => 'DESC',
                    'start'               => 0,
                    'limit'               => $oct_product_auto_related_data['limit']
                  );

                  $resultss += $this->model_extension_module_oct_product_auto_related->getProductAutoRelated($data_info);
                }

                $data['products'] = array();

        		foreach ($resultss as $result) {
        			if ($result['image']) {
        				$image = $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_related_width'), $this->config->get($this->config->get('config_theme') . '_image_related_height'));
        			} else {
        				$image = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_related_width'), $this->config->get($this->config->get('config_theme') . '_image_related_height'));
        			}

        			if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
        				$price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
        			} else {
        				$price = false;
        			}

        			if ((float)$result['special']) {
        				$special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
        			} else {
        				$special = false;
        			}

        			if ($this->config->get('config_tax')) {
        				$tax = $this->currency->format((float)$result['special'] ? $result['special'] : $result['price'], $this->session->data['currency']);
        			} else {
        				$tax = false;
        			}

        			if ($this->config->get('config_review_status')) {
        				$rating = (int)$result['rating'];
        			} else {
        				$rating = false;
        			}

        			$data['products'][] = array(
        				'product_id'  => $result['product_id'],
        				'thumb'       => $image,
        				'name'        => $result['name'],
        				'description' => utf8_substr(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8')), 0, $this->config->get($this->config->get('config_theme') . '_product_description_length')) . '..',
        				'price'       => $price,
        				'special'     => $special,
        				'tax'         => $tax,
        				'minimum'     => $result['minimum'] > 0 ? $result['minimum'] : 1,
        				'rating'      => $rating,
        				'href'        => $this->url->link('product/product', 'product_id=' . $result['product_id'])
        			);
        		}

        		$this->response->setOutput($this->load->view('product/product_related', $data));
        	}
            ]]>
        </add>
    </operation>
    <operation error="skip">
      <search><![CDATA[$results = $this->model_catalog_product->getProductRelated($this->request->get['product_id']);]]></search>
      <add position="replace"><![CDATA[
          $product_data_related = $this->cache->get('octemplates.oct_product_auto_related.product.' . (int) $this->config->get('config_store_id') . '.' . (int) $this->config->get('config_customer_group_id') . '.' . (int) $this->request->get['product_id'] . '.' . (int)$this->config->get('config_language_id'));

          $data['oct_rel_view'] = false;

  		if ($product_data_related) {

        $results = $this->model_catalog_product->getProductRelated($this->request->get['product_id']);

        $oct_product_auto_related_data = $this->config->get('oct_product_auto_related_data');

        if (isset($oct_product_auto_related_data) && $oct_product_auto_related_data['status'] != 0) {

          // $results = $this->model_catalog_product->getProductRelated($this->request->get['product_id']);
          // oct_product_auto_related start
          $oct_product_auto_related_data = $this->config->get('oct_product_auto_related_data');

          $this->load->model('extension/module/oct_product_auto_related');

          $data_info = array(
            'product_id'          => $this->request->get['product_id'],
            'sort'                => 'p.product_id',
            'filter_category_id'  => (isset($category_id)) ? $category_id : 0,
            'filter_sub_category' => 1,
            'order'               => 'DESC',
            'start'               => 0,
            'limit'               => $oct_product_auto_related_data['limit']
          );

          $results += $this->model_extension_module_oct_product_auto_related->getProductAutoRelated($data_info);

          $data['oct_rel_view'] = true;
        }
        // oct_product_auto_related end
      ]]></add>
    </operation>
    <operation>
        <search><![CDATA[$data['tags'] = array();]]></search>
        <add position="before"><![CDATA[}]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA[if ($result['image']) {]]></search>
      <add position="before"><![CDATA[
        if (isset($oct_product_auto_related_data['status']) && $oct_product_auto_related_data['status']) {
          if ($result['image']) {
            $image_auto_related = $this->model_tool_image->resize($result['image'], $oct_product_auto_related_data['width'], $oct_product_auto_related_data['height']);
          } else {
            $image_auto_related = $this->model_tool_image->resize('placeholder.png', $oct_product_auto_related_data['width'], $oct_product_auto_related_data['height']);
          }
        } else {
          if ($result['image']) {
            $image_auto_related = $this->model_tool_image->resize($result['image'], $this->config->get($this->config->get('config_theme') . '_image_related_width'), $this->config->get($this->config->get('config_theme') . '_image_related_height'));
          } else {
            $image_auto_related = $this->model_tool_image->resize('placeholder.png', $this->config->get($this->config->get('config_theme') . '_image_related_width'), $this->config->get($this->config->get('config_theme') . '_image_related_height'));
          }
        }
      ]]></add>
    </operation>
    <operation error="skip">
      <search><![CDATA['thumb'       => $image,]]></search>
      <add position="replace"><![CDATA[
        'thumb' => $image_auto_related,
        'saving'   => round((($result['price'] - $result['special'])/($result['price'] + 0.01))*100, 0),
      ]]></add>
    </operation>
  </file>
</modification>
